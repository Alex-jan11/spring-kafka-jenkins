pipeline {
  agent any

  environment {
    IMAGE_NAME = "user-service"
    IMAGE_TAG = "latest"
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'üì• ClonƒÉm codul...'
        checkout scm
      }
    }

    stage('Build JAR') {
      steps {
        echo 'üî® CompilƒÉm aplica»õia...'
        sh 'mvn clean package -DskipTests'
      }
    }

    stage('Build Docker Image') {
      steps {
        echo 'üê≥ Construim imaginea Docker...'
        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
      }
    }

    stage('(Optional) Push to DockerHub') {
      when {
        expression { env.DOCKERHUB_USERNAME != null }
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
          sh "docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD"
          sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} $DOCKERHUB_USERNAME/${IMAGE_NAME}:${IMAGE_TAG}"
          sh "docker push $DOCKERHUB_USERNAME/${IMAGE_NAME}:${IMAGE_TAG}"
        }
      }
    }
  }

  post {
    success {
      echo '‚úÖ Build finalizat cu succes.'
    }
    failure {
      echo '‚ùå Build e»ôuat.'
    }
  }
}